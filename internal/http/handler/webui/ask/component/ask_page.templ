package component

import (
	"github.com/bornholm/corpus/internal/build"
	"github.com/bornholm/corpus/internal/core/model"
	"github.com/bornholm/corpus/internal/core/port"
	common "github.com/bornholm/corpus/internal/http/handler/webui/common/component"
	"strconv"
	"time"
)

type AskPageVModel struct {
	Query          string
	TotalDocuments int64
	Results        []*port.IndexSearchResult
	Collections    []model.Collection

	Response        string
	Duration        time.Duration
	UploadFileModal *UploadFileModalVModel
}

templ AskPage(vmodel AskPageVModel) {
	@common.Page(common.WithTitle("Interrogez vos documents !")) {
		if vmodel.UploadFileModal != nil {
			@UploadFileModal(*vmodel.UploadFileModal)
		}
		<div class="container">
			<section class="section">
				<div class="level">
					<div class="level-left">
						<h1 class="title is-size-1 level-item"><a href={ common.BaseURL(ctx) }><img style="height:2em;vertical-align:middle" src={ string(common.BaseURL(ctx, common.WithPath("/assets/logo.svg"))) }/><span class="ml-2 has-text-grey-dark" style="vertical-align:middle">Corpus</span></a></h1>
					</div>
					<div class="level-right">
						<a class="button is-outlined is-link" href={ common.CurrentURL(ctx, common.WithValues("action", "upload")) }><span>Indexer un fichier</span><span class="icon"><i class="fa fa-plus"></i></span></a>
					</div>
				</div>
				<form method="post" hx-on:submit="htmx.addClass(htmx.find('#submit-button'), 'is-loading')">
					<div class="field is-large">
						<label class="label" for="query">Posez votre question <span class="has-text-weight-normal has-text-grey">({ strconv.FormatInt(vmodel.TotalDocuments, 10) } documents indexés)</span></label>
						<div class="control">
							<textarea id="query" name="q" class="textarea is-large">{ vmodel.Query }</textarea>
						</div>
					</div>
					<details class="is-clickable my-3">
						<summary>Paramètres avancés</summary>
						<div class="field">
							<label class="label">Collection(s)</label>
							<div class="control">
								<div class="select is-multiple is-fullwidth">
									<select multiple name="collection">
										for _, c := range vmodel.Collections {
											<option value={ c.Name() }>{ c.Name() }</option>
										}
									</select>
								</div>
							</div>
							<p class="help">Limiter le domaine de recherche à une ou plusieurs collections.</p>
						</div>
					</details>
					<button id="submit-button" type="submit" class="button is-link is-fullwidth is-large">
						<span>Interroger</span>
						<span class="icon"><i class="far fa-comment"></i></span>
					</button>
				</form>
				if vmodel.Query != "" {
					<hr class="mt-5"/>
					<div class="mt-5">
						<h2 class="title is-size-2">Réponse <span class="has-text-weight-normal has-text-grey subtitle">(générée en { vmodel.Duration.Round(time.Second).String() })</span></h2>
						if len(vmodel.Results) == 0 {
							<div class="message is-warning is-medium">
								<div class="message-body">
									Aucun résultat correspondant à votre question n'a été trouvé dans la base documentaire.
								</div>
							</div>
						} else {
							<div class="content is-size-4">
								@common.Markdown(vmodel.Response)
							</div>
							<h3 class="title is-size-3">Sources</h3>
							<div class="content">
								<ol>
									for _, r := range vmodel.Results {
										<li><a href={ templ.SafeURL(r.Source.String()) }>{ r.Source.String() }</a></li>
									}
								</ol>
							</div>
						}
					</div>
				}
			</section>
			<footer class="footer">
				<div class="content has-text-centered">
					<p>
						<b>Corpus</b> (version <a href="https://github.com/Bornholm/corpus" target="_blank">{ build.ShortVersion }</a>) | 
						<a target="_blank" href={ common.BaseURL(ctx, common.WithPath("/docs/index.html")) }>Documentation API</a>
					</p>
				</div>
			</footer>
		</div>
	}
}
